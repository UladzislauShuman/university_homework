вот как ты думаешь
согласно приведенному варианту работы
насколько я хорошо придумал модель и насколько хорошо реализовал БД?
подходит ли она до 3НФ?


Вариант 2. Видеотека. 
Описание предметной области. В домашней видеотеке хранятся видеозаписи на различных носителях. Имеются как видеосборники различных изданий, так и издания отдельных фильмов. Видеоносители могут передаваться во временное пользование, приобретаться из различных источников. 
Задачи. Учету подлежат носители различных типов – видеокассеты, видео CD, видео DVD и прочие. Необходимо обеспечить поиск сборников определенного издателя, фильмы определённого жанра, режиссера, страны, года выпуска. Учитывается также формат видеозаписи и длительность фильма. В случае передачи носителя во временное пользование контролировать сроки возврата.

ФИО студента, номер группы: Шуман Владислав Олегович, 2
ПРЕДМЕТНАЯ ОБЛАСТЬ: Видеотека
1. ОПИСАНИЕ ПРЕДМЕТНОЙ ОБЛАСТИ 
1.1 НАЗНАЧЕНИЕ И ОБЛАСТЬ ПРИМЕНЕНИЯ БАЗЫ ДАННЫХ
	Назначение: исходя из названия можно предположить, что в каком-то доме, где живёт семья, завалялось очень много кассет/дисков/… , на которых есть Фильмы, детские утренники детей, свадьба мамы и папы и тд. И жители дома столкнулись с проблемой — фильмов много, всё разбросанно, иногда не помнишь, когда вдруг захотелось посмотреть, какие фильмы есть. Хочется всё упорядочить и быстро получать необходимую информацию. Так же пользователь может брать продукт и на время и у кого-то. И как порядочный пользователь он хочет возвращать его в сроки.
	Область применения : личное использование для организации и контроля домашней коллекции видеозаписей.
1.2 ПРЕДПОЛАГАЕМЫЕ ПОЛЬЗОВАТЕЛИ
	Семья. Система должна стараться покрыть желания большинства членов семьи. Далее предположим, что речь идёт о семье, в которой живут отец, мать, дочка, сын, бабушка и дедушка.
1.3 ФУНКЦИОНАЛЬНЫЕ ТРЕБОВАНИЯ
	Пользователь разложил всё по полочкам, по коробочкам, про нумеровал (или иным образом сделал так, чтобы он смог легко найти Куда он положил).
	Изменение информации о видеозаписях (добавление новых видеозаписей, удаление и пр).
	Поиск видеозаписей по различным критериям (название, режиссер, жанр, страна, год выпуска, издатель, формат носителя, ).
	Учет видеоносителей во временное пользование с указанием даты выдачи и возврата.
	Генерацию различных отчетов:
		список всех фильмов в зависимости от значений полей(включая/не включая какое-либо) (определенного жанра /в зависимости от возраста/ и тд).
		список всех носителей определенного типа
		список фильмов, которые должны быть возвращены
		детали о конкретном фильме/сборнике
		
2. ОПИСАНИЕ БАЗЫ ДАННЫХ В ТЕРМИНАХ ОБЪЕКТОВ ПРЕДМЕТНОЙ ОБЛАСТИ
2.1 ОПИСАНИЕ ВХОДНЫХ ДОКУМЕНТОВ И СООБЩЕНИЙ В ТЕРМИНАХ ОБЪЕКТОВ ПРЕДМЕТНОЙ ОБЛАСТИ
	Входными данными являются сведения о каждой Материале, которые пользователь вводит в систему. Входные данные представляют собой атрибуты объектов Фильм и Носитель.
2.2 ОПИСАНИЕ ВЫХОДНЫХ ДОКУМЕНТОВ И СООБЩЕНИЙ В ТЕРМИНАХ ОБЪЕКТОВ ПРЕДМЕТНОЙ ОБЛАСТИ
	Выходными данными являются результаты запросов к базе данных, представленные в виде списков, отчетов или отдельных записей. Например, список фильмов определенного жанра, список всех фильмов, взятых во временное пользование, информация об отдельном фильме и тд.
3. ПОСТРОЕНИЕ ИНФОЛОГИЧЕСКОЙ (КОНЦЕПТУАЛЬНОЙ) МОДЕЛИ ПРЕДМЕТНОЙ ОБЛАСТИ
3.1 ВЫДЕЛЕНИЕ ОБЪЕКТОВ ПРЕДМЕТНОЙ ОБЛАСТИ
	Фильм — видеозапись, расположенная на носителе 
	Носитель — место, где храниться видеозапись
Издатель– компания, что сняла фильм и может являться как бы дочерней компанией одной большой компании.
	Издатель — компания фильма
	Сборник — конечный список фильмов / подмножество всех фильмов
	Режиссёр — режиссёр фильма
	Жанр — жанр фильма
	Пользователь — в нашем случае один из членов семьи
Конкретный_Прокатчик – своего рода «пункт выдачи» прокатчика
Прокатчик — тот, кто предоставил носитель на время
Адрес — определённый адрес без описания кому он принадлежит]
Страна – страна, где может быть и Фильм, и Издатель, и Адреса и тд.
Сайт – сама сущность будет хранить в себе название сайта и URL на него.

3.2 ВЫДЕЛЕНИЕ АТРИБУТОВ ОБЪЕКТОВ ПРЕДМЕТНОЙ ОБЛАСТИ
	Фильм (movie):
		#id
		Название (titile) 
 		Оригинальное название (original_title) 
		Год выпуска (release_year) 
		Продолжительность (duration) 
		Описание (description) 
		Рейтинг (rating) 
		Возраст (age_limit) 
		Сколько раз смотрели (number_of_views) 
*Издатель_id (publisher_id) 
*Главный_режиссёр_id (main_director_id) 
*Жанр_id(genre_id) 
*Страна_id (country_id) 

	Носитель (carrier):
		#id
                             Название (name) not null
		Объём(size) not null
                             *Тип_id(type_id) not null
                             *Формат записи_id (format_id) not null
	 
Издатель_Производитель (publisher_producer)
#Id
Название (name)
*Адрес_id (address_id)
              *Издатель_id (publisher_id)
Издатель(publisher):
              #Id 
		Название (name) 
                             *Сайт_id (website_id)  
Сборник(Collection):
#Id 
	Название (name) 
		(имеет связь М:М с Фильмом и Издателем)
	Режиссёр(Director):
                            #Id 
		Имя (name) 
               *Страна_id (country_id) 
	Жанр(Genre):
                             #Id 
		Название (name) 
	
Пользователь(User):
#Id 
	Имя пользователя (name)
	Возраст (age) 
	Прокатчик(Rentaler):
#Id 
Название (name) 
*Сайт_id (website_id)  
	Конкретный прокатчик (Rentaler_Concrete):
		#id
		Телефон (phone_number)
		* Прокатчик_id (rentaler_id)
		* Адрес_id (address_id)
	Адрес(Address):
#Id 
	Улица (street) 
	Дом (house) ) 
	Помещение (placement)  
*Страна_id (country_id) 
Страна (Country):
	#Id
	Название (name) 

Table Movie {
    id int [pk, increment]
    description varchar(255)
    rating int
    age_limit int
    number_of_views int
    duration int
    release_year int
    country_id int 
    website_id int 
    publisher_producer_id int
    director_id int
    genre_id int
}
ref: Publisher_Producer.id <> Movie.publisher_producer_id
ref : Director.id <> Movie.director_id 
ref : Website.id - Movie.website_id
ref : Genre.id <> Movie.genre_id

table Genre {
    id int [pk, increment]
    name varchar(255)
}

table Publisher_Producer {
    id int [pk, increment]
    publisher_id int
    address_id int
    name varchar(255)
}
ref : Publisher_Producer.publisher_id > Publisher.id
ref : Address.id - Publisher_Producer.address_id

table Publisher {
    id int [pk, increment]
    name varchar(255)
    website_id int
}

ref : Publisher.website_id - Website.id

table Director {
    id int [pk, increment]
    country_id int UNIQUE
    name varchar(255)
}

table Country {
    id int [pk, increment]
    name varchar(255)
}

ref : Director.country_id > Country.id 
ref : Movie.country_id > Country.id

table Collection {
    id int [pk, increment]
    name varchar(255)
    description text
}

table MovieCollection {
    collection_id int
    movie_id int
}

ref : Collection.id < MovieCollection.collection_id
ref : Movie.id < MovieCollection.movie_id

table Website {
    id int [pk, increment]
    name varchar(255)
    url text
}

table Address {
    id int [pk, increment]
    country_id int 
    street varchar(255)
    house int
    placement int
}

ref : Country.id < Address.country_id

table Rentaler {
    id int [pk, increment]
    name varchar(255)
    website_id int
}

ref : Website.id - Rentaler.website_id

table Rentaler_Concrete {
    id int [pk, increment]
    rentaler_id int
    address_id int
    phone_number varchar(255)
}

ref : Rentaler_Concrete.rentaler_id > Rentaler.id
ref : Rentaler_Concrete.address_id > Address.id

table User {
    id int [pk, increment]
    age int
    name varchar(255)
}

table UserFavoriteMovies {
    movie_id int
    user_id int
}

ref : User.id > UserFavoriteMovies.user_id
ref : Movie.id > UserFavoriteMovies.movie_id

table UserFavoriteGenre {
    genre_id int
    user_id int
}

ref : User.id > UserFavoriteGenre.user_id
ref : Genre.id > UserFavoriteGenre.genre_id

table Carrier { // носитель
    id int [pk, increment]
    size int
    name varchar(255)
    type_id int
}

ref : Carrier.type_id > Type.id

table Type {
    id int [pk, increment]
    name varchar(255)
}

table Recording_Format {
    id int [pk, increment]
    name varchar(255)
}

table RentedCarriers {
    id int [pk, increment]
    start_rent time
    end_rent time
    carrier_id int
    rentaler_concrete_id int
}

ref : Carrier.id - RentedCarriers.carrier_id
ref : Rentaler_Concrete.id < RentedCarriers.rentaler_concrete_id

table MovieCarrier {
    movie_id int
    carrier_id int
    recording_format_id int
}
// один фильм может быть как копия на разных носителях
// как и один носитель может хранить много фильмов
ref : Carrier.id < MovieCarrier.carrier_id
ref : Movie.id < MovieCarrier.movie_id
ref : Recording_Format.id < MovieCarrier.recording_format_id

